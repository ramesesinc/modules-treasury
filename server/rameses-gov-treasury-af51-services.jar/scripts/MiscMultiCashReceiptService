import com.rameses.annotations.*;

class MiscMultiCashReceiptService {
	
	@DataContext('var')
	def var_em; 

	@DataContext('checkpayment')
	def checkpayment_db; 

	@DataContext('cashreceipt_group')
	def cashreceipt_group_db; 

	@DataContext('cashreceipt_groupitem')
	def cashreceipt_groupitem_db; 

	@Service('CashReceiptService')
	def cashReceiptSvc; 
	
	@Service('DateService')
	def dateSvc; 
	

	@ProxyMethod 
	public def getSysVars( param ) {
		def res = [:]; 
		var_em.where("name like 'af"+ param.formno +"%'").list().each{
			res.put( it.name, it.value ); 
		} 
		return res; 
	}


	@ProxyMethod 
	public def post( entity, receipts ) {

		if ( !receipts ) {
			throw new Exception('Please provide the receipts'); 
		}

		def rundate = dateSvc.getServerDate(); 

		entity.checks.each {
			def o = checkpayment_db.find([ objid: it.objid ]).select('objid').first(); 
			if ( !o ) {
				checkpayment_db.create( it );  
			} 
		}

		def groupid = entity.objid; 
		cashreceipt_group_db.create([
			objid: groupid, 
			txndate: rundate, 
			controlid: entity.controlid, 
			amount: entity.amount, 
			totalcash: entity.totalcash, 
			totalnoncash: entity.totalnoncash, 
			cashchange: entity.cashchange
		]); 

		receipts.each { 
			def c = cashReceiptSvc.post( it ); 
			if ( c ) it.putAll( c ); 
			 
			cashreceipt_groupitem_db.create([ objid: it.objid, parentid: groupid ]);  
		} 
		return receipts;
	}
}